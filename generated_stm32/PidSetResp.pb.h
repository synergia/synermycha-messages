/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5-dev */

#ifndef PB_PIDSETRESP_PB_H_INCLUDED
#define PB_PIDSETRESP_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _PidSetResp {
    uint32_t requestId;
    bool rogerThat;
} PidSetResp;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define PidSetResp_init_default                  {0, 0}
#define PidSetResp_init_zero                     {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define PidSetResp_requestId_tag                 1
#define PidSetResp_rogerThat_tag                 2

/* Struct field encoding specification for nanopb */
#define PidSetResp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   requestId,         1) \
X(a, STATIC,   SINGULAR, BOOL,     rogerThat,         2)
#define PidSetResp_CALLBACK NULL
#define PidSetResp_DEFAULT NULL

extern const pb_msgdesc_t PidSetResp_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define PidSetResp_fields &PidSetResp_msg

/* Maximum encoded size of messages (where known) */
#define PidSetResp_size                          8

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
